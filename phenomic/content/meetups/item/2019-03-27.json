{"filename":"2019-03-27.md","date":"2019-03-27","title":"meetups/2019-03-27.md","edition":"83","host":"Toucan Toco","sponsors":[],"meetupLink":"https://www.meetup.com/fr-FR/Paris-js/events/258319504/","talks":[{"title":"Tester n’importe quel code, même le code dont vous n’êtes pas fier!","extract":"Une approche pragmatique au test de code legacy (code dont on pense qu’il n’est pas testable et que personne veut toucher).\nEn utilisant des mock simples et des design patterns, en javascript.\n\nAvez vous déjà entendu quelque chose comme:\n\n“C’est pas grave, on teste pas ce code là.”\n“T’es sûr de vouloir toucher ce code? Tu risque de casser quelque chose!”\n\nÇa a un air de déjà vu, n’est-ce pas?\nLa pluspart du temps en plus, les deux situations parlent du même code.\n\nLa majorité du code a une date d’expiration, plus ou moins dans le futur.\nCe talk est là pour vous aider lorsque cette date a été dépassée.\nMême dans le cas où cette date a été dépassée pour si longtemps que le code est devenu ce monstre de spaghetti moisi qui sent tellement mauvais que vous en avez peur et que tout ce que vous voulez c’est le jeter à la poubelle (mais vous en avez trop peur).\n\nCe talk va vous aider à éviter de “casser quelque chose” et “make your code great again”.\nVous allez même pouvoir aider les futurs aventuriers qui s’égareront dans ce code: le code que vous écrivez aujourdhui est le code légacy de demain.\nEs-ce que vous voulez faire encore plus le bazar?\nOu es-ce que vous voulez avoir du code plus robuste qui aidera les générations futures?\n","authors":[{"name":"William Gorge","url":"https://twitter.com/wgorgedev","avatar":"https://api.microlink.io/?url=https://twitter.com/wgorgedev&amps;embed=image.url"}],"slides":["https://docs.google.com/presentation/d/1B6zk3VjbsveVcDgq5mKJ1EP2buhBk9auDVh77jQPLsU/edit#slide=id.p"],"links":[],"videos":["https://youtu.be/zUeMu73Md9k?t=600"]},{"title":"The Challenging Migration from Heroku to Google Kubernetes Engine","extract":"L'été dernier, on a migré une application Node.js distribuée, de Heroku vers Google Kubernetes Engine. Je pensais que ça allait être facile. Hé bien j'avais tort ! sweat_smile\nJe vais vous raconter les ratés les plus épiques auxquels j'ai du faire face pendant cette migration. Et si vous êtes sympas, je vous expliquerai les astuces que j'ai appliquées pour corriger le tir !\n","authors":[{"name":"Adrien Joly","url":"http://twitter.com/adrienjoly","avatar":"https://api.microlink.io/?url=https://twitter.com/adrienjoly&amps;embed=image.url"}],"slides":["https://docs.google.com/presentation/d/1eVk1Px99bk-5BGKYL3MjZuQQqRezHVwtPiGFynBtsyE/edit?usp=sharing"],"links":["https://blog.algolia.com/challenging-migration-heroku-google-kubernetes-engine/"],"videos":["https://youtu.be/zUeMu73Md9k?t=2494"]},{"title":"From Heroku / Github / CircleCI to Kubernetes (helm/vault) / Gitlab CI CD","extract":"Rex sur la migration d'une société de Heroku (app engine GCP like), Github et CircleCI en Saas vers Kubernetes (via Helm et Vault), et gitlab (avec gitlab-ci) pour la CI/CD.\n","authors":[{"name":"Jérémy Wimsingues","url":"https://twitter.com/JWimsingues","avatar":"https://api.microlink.io/?url=https://twitter.com/JWimsingues&amps;embed=image.url"}],"slides":["https://docs.google.com/presentation/d/1Sy-4T-Nj4tyj07FeQhUIFNsFOtu9vlWnXXQt4RKVHSY/edit?usp=sharing"],"links":[],"videos":["https://youtu.be/zUeMu73Md9k?t=3837"]}],"body":{"t":"div"}}